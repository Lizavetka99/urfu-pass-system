@using Microsoft.EntityFrameworkCore
@using UrfuPassSystem.App.ArchiveHandler
@using UrfuPassSystem.App.ImageHandler
@using UrfuPassSystem.Domain.Entities
@using UrfuPassSystem.Domain.Enums
@using UrfuPassSystem.Domain.Services

@page "/check"
@rendermode InteractiveServer
@inject ILogger<Check> Logger
@inject ApplicationDbContext Database

<PageTitle>Проверка фотографий</PageTitle>


 
@if (image == null)
{
    <p><em>Все фотографии проверены.</em></p>
}
else
{
    <div class="image-name">Название фотографии: @image.OriginalFileName</div>
    <div class="container">
        <div class="row align-items-center">
            <!-- Стрелка влево -->
            <div class="col-auto">
                <button class="btn btn-arrow">
                    <i class="bi bi-arrow-left"></i>
                </button>
            </div>

            <!-- Фотографии с кнопками -->
            <div class="col d-flex justify-content-around">
                <!-- Обработанное фото с кнопкой -->
                <div class="photo-container">
                    <button type="button" class="btn-download">
                        <i class="bi bi-download"></i>
                    </button>
                    <img height="300" src="@PreviewRaw  " />
                    <p>Обработанное фото</p>
                    <button type="button" class="btn-success" @onclick="Success">Подтвердить</button>
                </div>

                <!-- Изначальное фото с кнопкой -->
                <div class="photo-container">
                    <button type="button" class="btn-download">
                        <i class="bi bi-download"></i>
                    </button>
                    <img height="300" src="@PreviewRaw" />
                    <p>Изначальное фото</p>
                    <button type="button" class="btn-danger" @onclick="NotSuccess">Фото не подходит</button>
                </div>
            </div>

            <!-- Стрелка вправо -->
            <div class="col-auto">
                <button class="btn btn-arrow">
                    <i class="bi bi-arrow-right"></i>
                </button>
            </div>
        </div>
    </div>
    
    <div class="container">
        <button class="btn">Вернуться к списку фото</button>
    </div>

}

@code {
    public Image? image;

    public string? PreviewRaw { get; set; }
    public string? PreviewProcessed { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Update();
    }

    private async Task Success(MouseEventArgs e)
    {
        var check = await CreateCheck(image!, true);
        await Update();
    }

    private async Task NotSuccess(MouseEventArgs e)
    {
        var check = await CreateCheck(image!, false);
        await Update();
    }

    private async Task<ImageCheck> CreateCheck(Image image, bool isSuccess)
    {
        var check = new ImageCheck
        {
            Image = image,
            CheckTime = DateTime.UtcNow,
            IsAuto = false,
            IsEdited = false,
            FilePath = image.FilePath,
            ResultCode = isSuccess ? ImageCheckResultCode.Success : ImageCheckResultCode.UnexpectedError
        };
        await Database.ImageChecks.AddAsync(check);
        await Database.SaveChangesAsync();
        return check;
    }

    private async Task Update()
    {
        image = await Database.Images
            .Include(i => i.Checks)
            .Where(i => !i.Checks!.Any(c => !c.IsAuto && !c.IsDeleted)).FirstOrDefaultAsync();
        if (image == null)
            return;

        PreviewRaw = image.FilePath;

        var autoCheck = image.Checks?.FirstOrDefault(c => c.IsAuto);
        if (autoCheck == null || !File.Exists(autoCheck.FilePath))
            PreviewProcessed = null;
        else
            PreviewProcessed = autoCheck.FilePath;
    }
}
