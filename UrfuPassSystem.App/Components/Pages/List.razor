@using Microsoft.EntityFrameworkCore
@using UrfuPassSystem.Domain.Entities
@using UrfuPassSystem.Domain.Services

    @page "/list"
    @attribute [StreamRendering]
    @inject ApplicationDbContext Database

    <PageTitle>Список фото</PageTitle>

    @if (images == null)
    {
        <p><em>Загрузка...</em></p>
    }
    else
    {
        <!-- Форма для поиска -->
        <form action="" method="get">
            <input name="s" placeholder="Искать здесь..." type="search">
            <button type="submit">
                <i class="bi bi-search"></i>
            </button>
        </form>
        
        <!-- Форма с 4 кнопками: Скачать Проверить Показывать только... Сортировать по -->
        <form action="" method="get" class="button-form">
            <button type="submit" class="list-button">Скачать</button>
            <button type="submit" class="list-button">Проверить</button>
            <button type="submit" class="list-button">Проверено деканатом</button>
            <button type="submit" class="list-button">Сортировать по</button>
        </form>
        
        <table class="table">
            <thead>
                <tr>
                    <th>Время отправки</th>
                    <th>Номер студенческого</th>
                    <th>Название файла</th>
                    <th>Превью</th>
                    <th>Статус проверки</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var image in images)
                {
                    <tr>
                        <td>@image.SentTime.ToString()</td>
                        <td>@image.StudentCardId</td>
                        <td>@image.OriginalFileName</td>
                        <td><img height="50" src="@image.FilePath" /></td>
                        <td>@image.Checks?.SingleOrDefault()?.IsSuccess</td>
                    </tr>
                }
            </tbody>
        </table>
    }

@code {
    private Image[]? images;

    protected override async Task OnInitializedAsync()
    {
        images = await Database.Images
            .Include(i => i.Checks!.OrderByDescending(c => c.CheckTime).Take(1))
            .ToArrayAsync();
    }
}
